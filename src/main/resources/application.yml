spring:
  application:
    name: kotlin-kafka

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:1111}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:29092,localhost:39092,localhost:49092}
    consumer:
      group-id: order-processing-group
      dlt-group-id: order-dlt-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: "middleware.messaging.kafka.sync.adapter.out.kafka.event"
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

kafka:
  consumer:
    retry:
      max-attempts: 3
      backoff-interval-ms: 1000
  topic:
    order-created: order.created
